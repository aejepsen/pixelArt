{
  "stats": {
    "suites": 12,
    "tests": 41,
    "passes": 27,
    "pending": 0,
    "failures": 14,
    "start": "2021-12-14T23:15:57.943Z",
    "end": "2021-12-14T23:18:54.248Z",
    "duration": 176305,
    "testsRegistered": 41,
    "passPercent": 65.85365853658537,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c1c4a250-9db3-43f5-bc75-98972305d321",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "afd60811-7702-4920-bfa2-06b77e2fc176",
          "title": "1 - Adicione à página o título \"Paleta de Cores\".",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "fullTitle": "1 - Adicione à página o título \"Paleta de Cores\". Verifica se contém um elemento `h1` com o id `title` com o título correto",
              "timedOut": null,
              "duration": 4405,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('contain.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "63ca4c95-f3d0-42c1-b9c2-e7890b1a891a",
              "parentUUID": "afd60811-7702-4920-bfa2-06b77e2fc176",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63ca4c95-f3d0-42c1-b9c2-e7890b1a891a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4405,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b5b46c81-97b2-4663-80e7-2874d645779b",
          "title": "2 - Adicione à página uma paleta de quatro cores distintas.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. A paleta de cores deve ser um elemento com `id` denominado `color-palette`",
              "timedOut": null,
              "duration": 4259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').should('be.visible');\ncy.get('#color-palette').children('.color');",
              "err": {},
              "uuid": "b3f152b8-a9d8-40f0-8464-f145dda025ae",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada cor individual da paleta de cores possui a `classe` chamada `color`.",
              "timedOut": null,
              "duration": 4939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').should('have.length', 4).then(function (colors) {\n  for (var i = 0; i < colors.length; i++) {\n    cy.wrap(colors[i]).should('be.visible');\n  }\n});",
              "err": {},
              "uuid": "25073fd6-7aff-4212-a9b5-12500f94850c",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a cor de fundo de cada elemento da paleta é a cor que o elemento representa. **A única cor não permitida na paleta é a cor branca.**",
              "timedOut": null,
              "duration": 2319,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).should('have.class', 'color').and('not.have.css', 'background-color', WHITE);\n  cy.wrap(color).should('have.css', 'background-color');\n});",
              "err": {},
              "uuid": "f6e39e65-2e11-4f4d-ac6a-665847cbf5bd",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se cada elemento da paleta de cores tem uma borda preta, sólida e com 1 pixel de largura;",
              "timedOut": null,
              "duration": 1999,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  cy.wrap(color).and('have.css', 'border', \"1px solid \".concat(BLACK)).and('have.class', 'color');\n});",
              "err": {},
              "uuid": "a60d6ac7-e330-4ad9-ab8f-2d95065d6b4c",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta lista todas as cores disponíveis para utilização, lado a lado.",
              "timedOut": null,
              "duration": 1191,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var currentColor = colors[index];\n    var previousColor = colors[index - 1];\n    cy.wrap(currentColor).should('be.onTheRightOf', previousColor).and('be.horizontallyAlignedWith', previousColor);\n  }\n});",
              "err": {},
              "uuid": "5eb962bd-406a-4c59-bfe0-02972613ab05",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores está posicionada abaixo do título 'Paleta de Cores'",
              "timedOut": null,
              "duration": 859,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').then(function (title) {\n  cy.get('#color-palette').should('be.belowOf', title);\n});",
              "err": {},
              "uuid": "e0f997a7-d577-4fd3-b6b2-388e3aa22c0e",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a paleta de cores não contém cores repetidas.",
              "fullTitle": "2 - Adicione à página uma paleta de quatro cores distintas. Verifica se a paleta de cores não contém cores repetidas.",
              "timedOut": null,
              "duration": 804,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var allColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  cy.log(allColors);\n  var uniqColors = (0, _toConsumableArray2[\"default\"])(new Set(allColors));\n  cy.log(uniqColors);\n  expect(allColors.length).to.eq(uniqColors.length);\n});",
              "err": {},
              "uuid": "cb1eeb11-f264-4f49-9362-6c70e3760e1a",
              "parentUUID": "b5b46c81-97b2-4663-80e7-2874d645779b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b3f152b8-a9d8-40f0-8464-f145dda025ae",
            "25073fd6-7aff-4212-a9b5-12500f94850c",
            "f6e39e65-2e11-4f4d-ac6a-665847cbf5bd",
            "a60d6ac7-e330-4ad9-ab8f-2d95065d6b4c",
            "5eb962bd-406a-4c59-bfe0-02972613ab05",
            "e0f997a7-d577-4fd3-b6b2-388e3aa22c0e",
            "cb1eeb11-f264-4f49-9362-6c70e3760e1a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16370,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ccda1b62-89a2-4f14-9ddb-a02f4aacf327",
          "title": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a primeira cor da paleta é preta",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se a primeira cor da paleta é preta",
              "timedOut": null,
              "duration": 1164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1b02648b-9769-462d-a80a-2065ddf7fa99",
              "parentUUID": "ccda1b62-89a2-4f14-9ddb-a02f4aacf327",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se as demais cores podem ser escolhidas livremente.",
              "fullTitle": "3 - Adicione a cor **preta** como a primeira cor da paleta de cores. Verifica se as demais cores podem ser escolhidas livremente.",
              "timedOut": null,
              "duration": 1511,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(1).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(1).should('have.css', 'background-color');\ncy.get('.color').eq(2).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(2).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(2).should('have.css', 'background-color');\ncy.get('.color').eq(3).should('not.have.css', 'background-color', BLACK);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', WHITE);\ncy.get('.color').eq(3).should('not.have.css', 'background-color', 'rgba(0, 0, 0, 0)');\ncy.get('.color').eq(3).should('have.css', 'background-color');",
              "err": {},
              "uuid": "1bbc04dc-f406-4e82-8ecd-b93245b960a8",
              "parentUUID": "ccda1b62-89a2-4f14-9ddb-a02f4aacf327",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b02648b-9769-462d-a80a-2065ddf7fa99",
            "1bbc04dc-f406-4e82-8ecd-b93245b960a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2675,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d64dcddf-329e-43a3-900e-a4d2f21fb2a8",
          "title": "4 - Adicione à página um quadro de pixels, com 25 pixels.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels possui o `id` denominado `pixel-board`",
              "timedOut": null,
              "duration": 1111,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').should('be.visible');",
              "err": {},
              "uuid": "59d2ed35-f610-412a-b92d-ed6c8784b225",
              "parentUUID": "d64dcddf-329e-43a3-900e-a4d2f21fb2a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se cada pixel individual dentro do quadro possui a `classe` denominada `pixel`.",
              "timedOut": null,
              "duration": 684,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25);",
              "err": {},
              "uuid": "fbe31400-f121-411f-b2a5-9a6890029630",
              "parentUUID": "d64dcddf-329e-43a3-900e-a4d2f21fb2a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se a cor inicial dos pixels dentro do quadro, ao abrir a página, é branca.",
              "timedOut": null,
              "duration": 1283,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {},
              "uuid": "5c1b3fc0-9669-49ab-9749-dbc6647b231d",
              "parentUUID": "d64dcddf-329e-43a3-900e-a4d2f21fb2a8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "fullTitle": "4 - Adicione à página um quadro de pixels, com 25 pixels. Verifica se o quadro de pixels aparece abaixo da paleta de cores",
              "timedOut": null,
              "duration": 542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {},
              "uuid": "2310c04e-3846-4ec9-8d2e-68041fa79636",
              "parentUUID": "d64dcddf-329e-43a3-900e-a4d2f21fb2a8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "59d2ed35-f610-412a-b92d-ed6c8784b225",
            "fbe31400-f121-411f-b2a5-9a6890029630",
            "5c1b3fc0-9669-49ab-9749-dbc6647b231d",
            "2310c04e-3846-4ec9-8d2e-68041fa79636"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "b2f8c9ba-e852-42a3-a0ae-936bae93c65f",
          "title": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se o quadro de pixels tem altura e comprimento de 5 elementos",
              "timedOut": null,
              "duration": 2146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}).and(function (pixels) {\n  var rows = chunk(pixels, 5);\n  rows.forEach(function (row) {\n    for (var index = 1; index < row.length; index += 1) {\n      var current = pixels[index];\n      var previous = pixels[index - 1];\n      cy.wrap(current).should('be.onTheRightOf', previous).and('be.horizontallyAlignedWith', previous);\n    }\n  });\n  for (var index = 1; index < 5; index += 1) {\n    expect(pixels[index * 5]).to.be.belowOf(pixels[(index - 1) * 5]);\n  }\n});",
              "err": {},
              "uuid": "a8089fb8-333e-4dd0-bfae-1377102d0688",
              "parentUUID": "b2f8c9ba-e852-42a3-a0ae-936bae93c65f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "fullTitle": "5 - Faça com que cada elemento do quadro de pixels possua 40 pixels de largura, 40 pixels de altura e seja delimitado por uma borda preta de 1 pixel. Verifica se 40 pixels é o tamanho total do elemento, incluindo seu conteúdo e excluindo a borda preta, que deve ser criada à parte.",
              "timedOut": null,
              "duration": 1853,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'height', '40px').and('have.css', 'width', '40px').and('have.css', 'border', \"1px solid \".concat(BLACK));\n});",
              "err": {},
              "uuid": "93ce3692-e323-4eba-8d4f-ca8376daec0d",
              "parentUUID": "b2f8c9ba-e852-42a3-a0ae-936bae93c65f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a8089fb8-333e-4dd0-bfae-1377102d0688",
            "93ce3692-e323-4eba-8d4f-ca8376daec0d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3999,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e606ca00-767f-4cba-8fdc-3ccee30de840",
          "title": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se o elemento da cor preta possui, inicialmente, a `classe` `selected`",
              "timedOut": null,
              "duration": 906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.selected').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "1eb6c28b-2ec7-4de0-bd2f-ab0c70a2a264",
              "parentUUID": "e606ca00-767f-4cba-8fdc-3ccee30de840",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "fullTitle": "6 - Defina a cor preta como cor inicial. Ao carregar a página a cor preta já deve estar selecionada para pintar os pixels Verifica se nenhuma outra cor da paleta tem a `classe` `selected`",
              "timedOut": null,
              "duration": 408,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color:not(:first-child)').each(function (color) {\n  cy.wrap(color).should('not.have.class', 'selected');\n});",
              "err": {},
              "uuid": "82264e5d-3fcd-4da2-8824-c820e062fc13",
              "parentUUID": "e606ca00-767f-4cba-8fdc-3ccee30de840",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1eb6c28b-2ec7-4de0-bd2f-ab0c70a2a264",
            "82264e5d-3fcd-4da2-8824-c820e062fc13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1314,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6492346f-882b-40a4-bd54-9f10a986b51b",
          "title": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se somente uma cor da paleta de cores tem a classe `selected` de cada vez",
              "timedOut": null,
              "duration": 1867,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (selectedColor, selectedColorIndex) {\n  cy.wrap(selectedColor).click();\n  cy.get('.color').each(function (color, colorIndex) {\n    if (colorIndex === selectedColorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n});",
              "err": {},
              "uuid": "7cdcce3f-f380-4484-a019-a68563c8b7dd",
              "parentUUID": "6492346f-882b-40a4-bd54-9f10a986b51b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "fullTitle": "7 - Clicar em uma das cores da paleta, faz com que ela seja selecionada e utilizada para preencher os pixels no quadro. Verifica se os pixels dentro do quadro não têm a classe `selected` quando são clicados",
              "timedOut": null,
              "duration": 15067,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('not.have.class', 'selected');\n  });\n});",
              "err": {},
              "uuid": "e8a571f3-1123-4271-bbd2-3f422eb66339",
              "parentUUID": "6492346f-882b-40a4-bd54-9f10a986b51b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7cdcce3f-f380-4484-a019-a68563c8b7dd",
            "e8a571f3-1123-4271-bbd2-3f422eb66339"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 16934,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4c0f8929-e96c-494d-a3aa-21d1991d293a",
          "title": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se ao carregar a página deve ser possível pintar os pixels de preto",
              "timedOut": null,
              "duration": 4909,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click().should('have.css', 'background-color', BLACK);\n});",
              "err": {},
              "uuid": "1881c0db-3b67-4b78-af27-50f6fa15db95",
              "parentUUID": "4c0f8929-e96c-494d-a3aa-21d1991d293a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se após selecionar uma outra cor na paleta, é possível pintar os pixels com essa cor",
              "timedOut": null,
              "duration": 15454,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "d6f7f3e7-d0a7-41d1-8831-dc68cfc69b22",
              "parentUUID": "4c0f8929-e96c-494d-a3aa-21d1991d293a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "fullTitle": "8 - Clicar em um pixel dentro do quadro após selecionar uma cor na paleta, faz com que o pixel seja preenchido com a cor selecionada. Verifica se somente o pixel que foi clicado foi preenchido com a cor selecionada, sem influenciar na cor dos demais pixels.",
              "timedOut": null,
              "duration": 7852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndexMap = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n};\ncy.get('.color').each(function (color, index) {\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndexMap[index];\n  cy.get('.pixel').eq(clickedPixelIndex).click();\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "9dbcb125-20a8-410b-a59f-5112d23b37fa",
              "parentUUID": "4c0f8929-e96c-494d-a3aa-21d1991d293a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1881c0db-3b67-4b78-af27-50f6fa15db95",
            "d6f7f3e7-d0a7-41d1-8831-dc68cfc69b22",
            "9dbcb125-20a8-410b-a59f-5112d23b37fa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28215,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "29aace4b-741c-449a-a9a3-e69e28ef8d27",
          "title": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se o botão tem o `id` denominado `clear-board`",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão tem o `id` denominado `clear-board`",
              "timedOut": null,
              "duration": 1007,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('be.visible');",
              "err": {},
              "uuid": "88dc725f-089d-4503-aec0-886a20b7eb4a",
              "parentUUID": "29aace4b-741c-449a-a9a3-e69e28ef8d27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o botão está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 624,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#clear-board').should('be.belowOf', palette);\n});\ncy.get('#clear-board').then(function (clearBtn) {\n  cy.get('#pixel-board').should('be.belowOf', clearBtn);\n});",
              "err": {},
              "uuid": "c20ad722-bbac-4cae-9f25-7e848dc14da1",
              "parentUUID": "29aace4b-741c-449a-a9a3-e69e28ef8d27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o texto do botão é 'Limpar'",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se o texto do botão é 'Limpar'",
              "timedOut": null,
              "duration": 723,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#clear-board').should('contain.text', 'Limpar');",
              "err": {},
              "uuid": "655eb5bf-ca62-49f0-a9b3-9ad0a15899d0",
              "parentUUID": "29aace4b-741c-449a-a9a3-e69e28ef8d27",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "fullTitle": "9 - Crie um botão que, ao ser clicado, limpa o quadro preenchendo a cor de todos seus pixels com branco. Verifica se ao clicar no botão, o quadro de pixels é totalmente preenchido de branco",
              "timedOut": null,
              "duration": 5244,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').eq(1).then(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});\ncy.get('#clear-board').click();\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "bcc4f775-b2bf-428c-bdd6-be0d612a2913",
              "parentUUID": "29aace4b-741c-449a-a9a3-e69e28ef8d27",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "88dc725f-089d-4503-aec0-886a20b7eb4a",
            "c20ad722-bbac-4cae-9f25-7e848dc14da1",
            "655eb5bf-ca62-49f0-a9b3-9ad0a15899d0",
            "bcc4f775-b2bf-428c-bdd6-be0d612a2913"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7598,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
          "title": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se existe um input com o id `board-size`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um input com o id `board-size`",
              "timedOut": null,
              "duration": 5404,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "8a1ca038-032f-41ac-8aab-ec0ff06f6096",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se existe um botão com o id `generate-board`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se existe um botão com o id `generate-board`",
              "timedOut": null,
              "duration": 5966,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').should('be.visible');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "95dc2619-3410-4054-a6da-1dc0ffa779f3",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input só aceita número maiores que zero. Essa restrição deve ser feita usando os atributos do elemento `input`",
              "timedOut": null,
              "duration": 6217,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size[type=\\'number\\'][min=\\'1\\']');",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size[type='number'][min='1']', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "1804fc60-4c54-4a6e-8145-a8fd1267c6f7",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão contém o texto 'VQV'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão contém o texto 'VQV'",
              "timedOut": null,
              "duration": 6981,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#generate-board').contains(/vqv/i);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "717a7b83-ad2f-47c9-af41-4768d336da3a",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o input está posicionado entre a paleta de cores e o quadro de pixels",
              "timedOut": null,
              "duration": 6548,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#color-palette').then(function (palette) {\n  cy.get('#board-size').should('be.belowOf', palette);\n});\ncy.get('#board-size').then(function (palette) {\n  cy.get('#pixel-board').should('be.belowOf', palette);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "29141d72-05a0-4d3a-8140-f06a76eed289",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o botão está posicionado ao lado do input",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o botão está posicionado ao lado do input",
              "timedOut": null,
              "duration": 5986,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').then(function (board) {\n  cy.get('#generate-board').should('be.onTheRightOf', board);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "fee1c109-85cc-4624-b82d-ae60f8c8ce19",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se nenhum valor for colocado no input ao clicar no botão, um `alert` é exibido com o texto: 'Board inválido!'",
              "timedOut": null,
              "duration": 6469,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "var alerted = false;\ncy.on('window:alert', function (msg) {\n  return alerted = msg;\n});\ncy.get('#generate-board').click().then(function () {\n  return expect(alerted).to.match(/Board inválido!/i);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#generate-board', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "388959e7-571e-445b-ba9f-dce5f3fb8313",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se ao clicar no botão com um valor preenchido, o tamanho do board muda.",
              "timedOut": null,
              "duration": 6397,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "495212bb-8ae7-4195-838d-e20cfac6ecda",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "fullTitle": "10 - Faça o quadro de pixels ter seu tamanho definido pelo usuário. Verifica se o novo quadro tem todos os pixels preenchidos com a cor branca",
              "timedOut": null,
              "duration": 6116,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(6);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 36).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n});",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "a4b4eb7c-b692-44bf-b14f-c8b6810d2c04",
              "parentUUID": "fcb0777f-2f60-434a-b0f0-9e93e7ac30d0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8a1ca038-032f-41ac-8aab-ec0ff06f6096",
            "95dc2619-3410-4054-a6da-1dc0ffa779f3",
            "1804fc60-4c54-4a6e-8145-a8fd1267c6f7",
            "717a7b83-ad2f-47c9-af41-4768d336da3a",
            "29141d72-05a0-4d3a-8140-f06a76eed289",
            "fee1c109-85cc-4624-b82d-ae60f8c8ce19",
            "388959e7-571e-445b-ba9f-dce5f3fb8313",
            "495212bb-8ae7-4195-838d-e20cfac6ecda",
            "a4b4eb7c-b692-44bf-b14f-c8b6810d2c04"
          ],
          "pending": [],
          "skipped": [],
          "duration": 56084,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e0522638-1959-499a-9cef-40fc27a81d6d",
          "title": "11 - Limite o tamanho mínimo e máximo do board.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se a altura máxima do board é 50",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura máxima do board é 50",
              "timedOut": null,
              "duration": 6848,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "34eea101-a84a-4a92-a1fd-ccb5c0ce6851",
              "parentUUID": "e0522638-1959-499a-9cef-40fc27a81d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 5 quando um valor menor é colocado no input",
              "timedOut": null,
              "duration": 5867,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "2575c96d-9679-44b4-b0f2-44c409b12a6d",
              "parentUUID": "e0522638-1959-499a-9cef-40fc27a81d6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "fullTitle": "11 - Limite o tamanho mínimo e máximo do board. Verifica se a altura do board é 50 quando um valor maior é colocado no input",
              "timedOut": null,
              "duration": 6366,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {
                "message": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.",
                "estack": "CypressError: Timed out retrying: Expected to find element: '#board-size', but never found it.\n    at cypressErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149934:9)\n    at throwErr (http://localhost:38685/__cypress/runner/cypress_runner.js:149867:11)\n    at Object.throwErrByPath (http://localhost:38685/__cypress/runner/cypress_runner.js:149915:3)\n    at retry (http://localhost:38685/__cypress/runner/cypress_runner.js:144197:19)\n    at onFailFn (http://localhost:38685/__cypress/runner/cypress_runner.js:132448:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromise0 (http://localhost:38685/__cypress/runner/cypress_runner.js:165453:10)\n    at Promise._settlePromises (http://localhost:38685/__cypress/runner/cypress_runner.js:165528:18)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162140:16)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": null
              },
              "uuid": "23cba695-10ee-43ab-a00d-a6c573d6d7e1",
              "parentUUID": "e0522638-1959-499a-9cef-40fc27a81d6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "34eea101-a84a-4a92-a1fd-ccb5c0ce6851",
            "2575c96d-9679-44b4-b0f2-44c409b12a6d",
            "23cba695-10ee-43ab-a00d-a6c573d6d7e1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 19081,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2ba16bc3-35c4-41a2-b299-17e7e29ae8e4",
          "title": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página.",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se as cores geradas na paleta são diferentes a cada carregamento da página",
              "timedOut": null,
              "duration": 3797,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38685/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38685/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38685/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38685/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38685/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38685/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38685/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "f0688b0f-3e37-4578-86fb-3816016ed553",
              "parentUUID": "2ba16bc3-35c4-41a2-b299-17e7e29ae8e4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "fullTitle": "12 - Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página. Verifica se a cor preta ainda está presente e é a primeira na sua paleta de cores",
              "timedOut": null,
              "duration": 2127,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors;\n  var previousColors;\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  });\n  expect(previousColors[0]).to.eq(BLACK);\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors[0]).to.eq(BLACK);\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {
                "message": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]",
                "estack": "AssertionError: expected [ Array(4) ] to not deeply equal [ Array(4) ]\n    at getRet (http://localhost:38685/__cypress/runner/cypress_runner.js:136585:16)\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Function.Promise.attempt.Promise.try (http://localhost:38685/__cypress/runner/cypress_runner.js:164690:29)\n    at Context.thenFn (http://localhost:38685/__cypress/runner/cypress_runner.js:136599:23)\n    at Context.then (http://localhost:38685/__cypress/runner/cypress_runner.js:136971:21)\n    at Context.<anonymous> (http://localhost:38685/__cypress/runner/cypress_runner.js:148875:21)\n    at http://localhost:38685/__cypress/runner/cypress_runner.js:148351:33\n    at tryCatcher (http://localhost:38685/__cypress/runner/cypress_runner.js:167415:23)\n    at Promise._settlePromiseFromHandler (http://localhost:38685/__cypress/runner/cypress_runner.js:165351:31)\n    at Promise._settlePromise (http://localhost:38685/__cypress/runner/cypress_runner.js:165408:18)\n    at Promise._settlePromiseCtx (http://localhost:38685/__cypress/runner/cypress_runner.js:165445:10)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueue (http://localhost:38685/__cypress/runner/cypress_runner.js:162145:12)\n    at Async../node_modules/bluebird/js/release/async.js.Async._drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162150:10)\n    at Async.drainQueues (http://localhost:38685/__cypress/runner/cypress_runner.js:162024:14)",
                "diff": ""
              },
              "uuid": "5efdc7ee-f2a4-4e85-aa2d-9505d4623d32",
              "parentUUID": "2ba16bc3-35c4-41a2-b299-17e7e29ae8e4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "f0688b0f-3e37-4578-86fb-3816016ed553",
            "5efdc7ee-f2a4-4e85-aa2d-9505d4623d32"
          ],
          "pending": [],
          "skipped": [],
          "duration": 5924,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}